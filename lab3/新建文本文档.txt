package com.example.peter.lab3;

import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.wifi.hotspot2.pps.HomeSp;
import android.support.design.widget.FloatingActionButton;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.SparseArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;



import jp.wasabeef.recyclerview.adapters.ScaleInAnimationAdapter;
import jp.wasabeef.recyclerview.animators.OvershootInLeftAnimator;

import static android.location.Location.convert;
import static com.example.peter.lab3.R.id.fab;

public class MainActivity extends AppCompatActivity {

    private RecyclerView mRecyclerView;
    private CommenAdapter commenAdapter;
    private List<Map<String,Object>> listItem;

    private ListView mListView;
    private SimpleAdapter simpleAdapter;
    private List<Map<String,Object>> shoppingitem;

    private List<Goods> data = new ArrayList<>();
    private List<Goods> shoplist = new ArrayList<>();
    private AlertDialog.Builder builder;
    private FloatingActionButton fab;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.recyclerview);
        initData();
        //shoppingData();

        fab = (FloatingActionButton) findViewById(R.id.fab);
        builder = new AlertDialog.Builder(this);
        mRecyclerView = (RecyclerView) findViewById(R.id.recycler_view);
        mRecyclerView.setLayoutManager(new LinearLayoutManager(this));
        commenAdapter = new CommenAdapter<Map<String,Object>>(MainActivity.this,R.layout.goods_list_item, listItem)
        {
            @Override
            public void convert(ViewHolder holder, Map<String, Object> s)
            {
                TextView name = holder.getView(R.id.name);
                name.setText(s.get("name").toString());
                TextView first = holder.getView(R.id.first);
                first.setText(s.get("firstLetter").toString());
            }
        };
        //mRecyclerView.setAdapter(commenAdapter);

        ScaleInAnimationAdapter animationAdapter = new ScaleInAnimationAdapter(commenAdapter);
        animationAdapter.setDuration(1000);
        mRecyclerView.setAdapter(animationAdapter);
        mRecyclerView.setItemAnimator(new OvershootInLeftAnimator());

        commenAdapter.setOnItemClickListener(new CommenAdapter.OnItemClickListener(){
            @Override
            public void onClick(int position){
                Intent intent = new Intent(MainActivity.this, Goods_info.class);
                Bundle bundle = new Bundle();
                bundle.putSerializable("goods",data.get(position));
                intent.putExtras(bundle);//传送数据
                startActivityForResult(intent,1);//启动跳转

            }
            @Override
            public void onLongClick(int position){
                commenAdapter.removeItem(position);
                data.remove(position);
                Toast.makeText(MainActivity.this,"移除第"+position+"个商品",Toast.LENGTH_SHORT).show();
            }
        });

        mListView = (ListView) findViewById(R.id.shoppinglist);
        //mListView = new ListView(this);
        simpleAdapter = new SimpleAdapter(this,shoppingitem,R.layout.goods_list,new String[] {"first","name","price"},new int[] {R.id.first, R.id.name, R.id.price});
        mListView.setAdapter(simpleAdapter);
        mListView.setVisibility(View.GONE);

        mListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                if(i==0) return;
                Intent intent = new Intent(MainActivity.this, Goods_info.class);
                Bundle bundle = new Bundle();
                bundle.putSerializable("goods",shoplist.get(i));
                intent.putExtras(bundle);//传送数据
                startActivityForResult(intent,1);//启动跳转
            }
        });
        mListView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener(){
            @Override
            public boolean onItemLongClick(AdapterView<?> adapterView, View view,final int pos, long l){
                if(pos==0)return true;
                builder.setTitle("移除商品");
                builder.setNegativeButton("取消",new DialogInterface.OnClickListener(){
                    @Override
                    public void onClick(DialogInterface dialogInterface,int i){}
                });
                builder.setMessage("从购物车移除"+shoplist.get(pos).getName()+"?");
                builder.setPositiveButton("确定",new DialogInterface.OnClickListener(){
                    @Override
                    public void onClick(DialogInterface dialogInterface, int i){
                        shoppingitem.remove(pos);
                        simpleAdapter.notifyDataSetChanged();
                    }
                }).create().show();
                return true;
            }
        });
    }

    //fab切换商品列表和购物车界面
    public void change(View v){
        if(mRecyclerView.getVisibility()==View.VISIBLE)
        {
            mRecyclerView.setVisibility(View.GONE);
            mListView.setVisibility(View.VISIBLE);
            //Toast.makeText(MainActivity.this,"fuck you too",Toast.LENGTH_SHORT).show();
            fab.setImageResource(R.drawable.mainpage);

        }
        else
        {
            mRecyclerView.setVisibility(View.VISIBLE);
            mListView.setVisibility(View.GONE);
            fab.setImageResource(R.drawable.shoplist);
        }
    }


    protected void onActivityResult(int requestCode, int resultCode, Intent data)
    {
        if(requestCode==1)
        {
            if(resultCode==1)
            {
                Goods c = (Goods) data.getExtras().get("goods");
                Map<String,Object> listItem = new LinkedHashMap<>();
                assert c != null;
                listItem.put("first",c.getFirstLetter());
                listItem.put("name",c.getName());
                listItem.put("price",c.getPrice());
                shoplist.add(c);
                shoppingitem.add(listItem);
                simpleAdapter.notifyDataSetChanged();
            }
        }
    }

    protected void initData()
    {
        data.add(new Goods(R.drawable.ef,"Enchated Forest","￥5.00", "作者 Johanna Basford"));
        data.add(new Goods(R.drawable.am,"Arla Milk","￥59.00", "产地 德国"));
        data.add(new Goods(R.drawable.dm,"Devondale Milk","￥79.00", "产地 澳大利亚"));
        data.add(new Goods(R.drawable.kindle,"Kindle Oasis","￥2399.00", "版本 8GB"));
        data.add(new Goods(R.drawable.waitrose,"Waitrose 早餐麦片","￥179.00", "重量 2kg"));
        data.add(new Goods(R.drawable.mctitie,"Mcvitie's 饼干","￥14.90", "产地 美国"));
        data.add(new Goods(R.drawable.fedo,"Ferrero Rocher","￥132.59", "重量 300g"));
        data.add(new Goods(R.drawable.maltess,"Maltesers","￥141.43", "重量 118g"));
        data.add(new Goods(R.drawable.lin,"Lindt","￥139.43", "重量 249g"));
        data.add(new Goods(R.drawable.borg,"Borggreve","￥28.90", "重量 640g"));

        listItem = new ArrayList<>();
        shoppingitem = new ArrayList<>();
        for(Goods c : data){
            Map<String, Object> Item = new LinkedHashMap<>();
            Item.put("name",c.getName());
            Item.put("firstLetter",c.getFirstLetter());
            listItem.add(Item);
        }
        {
            Goods c =new Goods(0,"购物车","价格",null);
            Map<String,Object> Item = new LinkedHashMap<>();
            Item.put("first","*");
            Item.put("name",c.getName());
            Item.put("price",c.getPrice());
            shoplist.add(c);
            shoppingitem.add(Item);
        }

    }

    public static class ViewHolder extends RecyclerView.ViewHolder{
        private SparseArray<View> mViews;
        private View mConvertView;

        public ViewHolder(Context context, View itemView, ViewGroup parent)
        {
            super(itemView);
            mConvertView = itemView;
            mViews = new SparseArray<View>();
        }

        public static ViewHolder get(Context context, ViewGroup parent, int layoutId)
        {
            View itemView = LayoutInflater.from(context).inflate(layoutId,parent,false);
            ViewHolder holder = new ViewHolder(context, itemView, parent);
            return holder;
        }

        public <T extends View> T getView(int viewId)
        {
            View view = mViews.get(viewId);
            if(view == null)
            {
                view = mConvertView.findViewById(viewId);
                mViews.put(viewId, view);
            }
            return (T) view;
        }
    }


    public static abstract class CommenAdapter<T> extends RecyclerView.Adapter<MainActivity.ViewHolder>
    {
        protected Context mContext;
        protected int mLayoutId;
        protected List<T> mDatas;
        private OnItemClickListener mOnItemClickListener = null;
        //protected List<Map<String,Object>> listItems;
        public CommenAdapter(Context context, int layoutId, List<T> datas)
        {
            mContext = context;
            mLayoutId = layoutId;
            mDatas = datas;
        }

        @Override
        public MainActivity.ViewHolder onCreateViewHolder(final ViewGroup parent, int viewType)
        {
            MainActivity.ViewHolder viewHolder = MainActivity.ViewHolder.get(mContext,parent,mLayoutId);
            return viewHolder;
        }

        public abstract void convert(MainActivity.ViewHolder holder, T t);

        @Override
        public void onBindViewHolder(final MainActivity.ViewHolder holder, int position)
        {
            convert(holder, mDatas.get(position));
            if(mOnItemClickListener != null){
                holder.itemView.setOnClickListener(new View.OnClickListener(){
                    @Override
                    public void onClick(View v){
                        mOnItemClickListener.onClick(holder.getAdapterPosition());
                        //Toast.makeText(,"fuck you",Toast.LENGTH_SHORT).show();
                    }
                });
                holder.itemView.setOnLongClickListener(new View.OnLongClickListener(){
                    @Override
                    public boolean onLongClick(View v){
                        mOnItemClickListener.onLongClick(holder.getAdapterPosition());
                        //Toast.makeText(MainActivity.this,"fuck you too",Toast.LENGTH_SHORT).show();
                        return false;
                    }

                });
            }

        }

        public  interface OnItemClickListener{
            void onClick(int position);
            void  onLongClick(int position);
        }

        public void setOnItemClickListener(OnItemClickListener onItemClickListener){
            this.mOnItemClickListener = onItemClickListener;
        }

        @Override
        public int getItemCount(){
            return mDatas.size();
        }

        //private OnItemClickListener mOnItemClickListener;
        public void removeItem(int position){
            mDatas.remove(position);
            notifyItemRemoved(position);
        }
    }

}

